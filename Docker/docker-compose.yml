
services:
  postgres:
    env_file:
      - ../.env
    container_name: trading-db
    build:
      context: ../Database
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: simulated_trading_platform
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: trading_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trading_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d simulated_trading_platform && psql -U trading_user -d simulated_trading_platform -c 'SELECT COUNT(*) FROM stocks;' | grep -q '[0-9]'"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s

  fastapi:
    env_file:
      - ../.env
    container_name: trading-api
    build:
      context: ../Backend/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      trading-engine:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://trading_user:trading_password@postgres:5432/simulated_trading_platform}
    volumes:
      - cpp_engine_shared:/shared
    networks:
      - trading_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  trading-engine:
    env_file:
      - ../.env
    container_name: trading-engine
    build:
      context: ../Backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://trading_user:trading_password@postgres:5432/simulated_trading_platform}
    volumes:
      - cpp_engine_shared:/shared
    networks:
      - trading_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "test", "-x", "/shared/trading_engine"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: >
      sh -c "
        mkdir -p /shared &&
        cp /app/trading_engine /shared/ &&
        cp /app/simulation-orchestrator /shared/ &&
        cp /app/libcpp-common.so /shared/ &&
        chmod +x /shared/trading_engine &&
        chmod +x /shared/simulation-orchestrator &&
        echo 'C++ binaries and libraries copied to /shared/' &&
        tail -f /dev/null
      "

  frontend:
    env_file:
      - ../.env
    container_name: trading-ui
    build:
      context: ../Frontend/trading-platform-ui
      dockerfile: Dockerfile
      target: production
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
    ports:
      - "80:80"
    depends_on:
      fastapi:
        condition: service_healthy
    networks:
      - trading_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  postgres_data:
  cpp_engine_shared:

networks:
  trading_network:
    driver: bridge