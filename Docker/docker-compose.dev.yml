
services:
  postgres:
    env_file:
      - ../.env
    container_name: trading-db
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_DB: simulated_trading_platform
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: trading_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../Database:/docker-entrypoint-initdb.d
    networks:
      - trading_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user -d simulated_trading_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  fastapi:
    env_file:
      - ../.env
    container_name: trading-api
    build:
      context: ../Backend/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      cpp-engine:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://trading_user:trading_password@postgres:5432/simulated_trading_platform
      DOCKER_ENV: "true"
    volumes:
      - ../Backend/api:/app
      - cpp_engine_shared:/shared
    networks:
      - trading_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  cpp-engine:
    env_file:
      - ../.env
    container_name: trading-engine
    build:
      context: ../Backend/cpp-engine
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_NAME: simulated_trading_platform
      DB_USER: trading_user
      DB_PASSWORD: trading_password
    volumes:
      - cpp_engine_shared:/shared
    healthcheck:
      test: ["CMD", "test", "-x", "/shared/trading_engine"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: >
      sh -c "
        mkdir -p /shared &&
        cp /app/build/trading_engine /shared/ &&
        chmod +x /shared/trading_engine &&
        echo 'C++ engine binary copied to /shared/trading_engine' &&
        tail -f /dev/null
      "
    networks:
      - trading_network

  frontend:
    env_file:
      - ../.env
    container_name: trading-ui
    build:
      context: ../Frontend/trading-platform-ui
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    depends_on:
      fastapi:
        condition: service_healthy
    volumes:
      - ../Frontend/trading-platform-ui:/app
      - /app/node_modules
    networks:
      - trading_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}

volumes:
  postgres_data:
  cpp_engine_shared:

networks:
  trading_network:
    driver: bridge